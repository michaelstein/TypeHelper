SET(GMS_BUILD_VERSION 0)
SET(GMS_BUILD_BRANCH 0)
SET(GMS_BUILD_TAG 0)
SET(GMS_BUILD_COMMIT_HASH 0)
SET(GMS_BUILD_COMMIT_SHORT 0)
SET(GMS_BUILD_TIMESTAMP 0)

IF(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/.git)
	FIND_PACKAGE(Git)
	IF(GIT_FOUND)
		EXECUTE_PROCESS(
			COMMAND ${GIT_EXECUTABLE} describe --tags --always --dirty
			WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}"
			OUTPUT_VARIABLE "GMS_BUILD_VERSION"
			ERROR_QUIET
			OUTPUT_STRIP_TRAILING_WHITESPACE)
		MESSAGE(STATUS "Git version: ${GMS_BUILD_VERSION}")

		EXECUTE_PROCESS(
			COMMAND ${GIT_EXECUTABLE} rev-parse --abbrev-ref HEAD
			WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}"
			OUTPUT_VARIABLE "GMS_BUILD_BRANCH"
			ERROR_QUIET
			OUTPUT_STRIP_TRAILING_WHITESPACE)
		MESSAGE(STATUS "Git branch: ${GMS_BUILD_BRANCH}")

		EXECUTE_PROCESS(
			COMMAND ${GIT_EXECUTABLE} tag -l --points-at HEAD
			WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}"
			OUTPUT_VARIABLE "GMS_BUILD_TAG"
			ERROR_QUIET
			OUTPUT_STRIP_TRAILING_WHITESPACE)
		MESSAGE(STATUS "Git tag: ${GMS_BUILD_TAG}")

		EXECUTE_PROCESS(
			COMMAND ${GIT_EXECUTABLE} rev-parse HEAD
			WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}"
			OUTPUT_VARIABLE "GMS_BUILD_COMMIT_HASH"
			ERROR_QUIET
			OUTPUT_STRIP_TRAILING_WHITESPACE)
		MESSAGE(STATUS "Git commit: ${GMS_BUILD_COMMIT_HASH}")

		EXECUTE_PROCESS(
			COMMAND ${GIT_EXECUTABLE} rev-parse --short HEAD
			WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}"
			OUTPUT_VARIABLE "GMS_BUILD_COMMIT_SHORT"
			ERROR_QUIET
			OUTPUT_STRIP_TRAILING_WHITESPACE)
		MESSAGE(STATUS "Git commit: ${GMS_BUILD_COMMIT_SHORT}")

		EXECUTE_PROCESS(
			COMMAND ${GIT_EXECUTABLE} show -s --format=%ct HEAD
			WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}"
			OUTPUT_VARIABLE "GMS_BUILD_TIMESTAMP"
			ERROR_QUIET
			OUTPUT_STRIP_TRAILING_WHITESPACE)
		MESSAGE(STATUS "Git date/time: ${GMS_BUILD_TIMESTAMP}")
	ENDIF(GIT_FOUND)
ENDIF(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/.git)

CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/git_version.h.in ${CMAKE_CURRENT_BINARY_DIR}/git_version.h @ONLY)
#CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/git_version.json.in ${CMAKE_CURRENT_SOURCE_DIR}/git_version.json @ONLY)
